@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options


@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString.Value}";
}
    <ul class="navbar-nav">
        <li class="nav-item">
            @if (requestCulture.RequestCulture.UICulture.Name == "uk")
            {
                <a class="nav-link text-dark"  asp-page="/Index" asp-page-handler="SetLanguage" asp-route-lang="en" asp-route-returnUrl="@returnUrl">Eng</a>
            }
            else
            {
                <a class="nav-link text-dark" asp-page="/Index" asp-page-handler="SetLanguage" asp-route-lang="uk" asp-route-returnUrl="@returnUrl">Ukr</a>
            }
        </li>
    </ul>





